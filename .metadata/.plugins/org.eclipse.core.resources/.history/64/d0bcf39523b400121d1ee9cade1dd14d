package com.comp4903.project.graphics.tile;

import java.io.IOException;
import java.io.InputStream;

import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;

import android.content.Context;
import android.content.res.AssetManager;
import android.util.Xml;

public class TileSetDefinition {
	
	String name;
	String fileName;
	String texFileName;
	int textureMap;
	float[][] texcoords = new float[100][14];
	String ns = "def";
	
	public TileSetDefinition(String f, Context c)
	{
		fileName = f;
		AssetManager am = c.getAssets();
		
		try {
			InputStream buf = null;
			buf = am.open(fileName);
			XMLparseTileSet(buf);
			buf.close();
			
		} catch (IOException e)
		{ }			
	}
	
	public void XMLparseTileSet(InputStream buf) throws IOException
	{
		try
		{
			XmlPullParser parser = Xml.newPullParser();
			parser.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES, false);
            parser.setInput(buf, null);
            parser.nextTag();
            processXML(parser);
			
		} catch (XmlPullParserException e)
		{}		
		finally {
			
		}
	}
	
	public void processXML(XmlPullParser parser) throws XmlPullParserException, IOException
	{
		parser.require(XmlPullParser.START_TAG, ns, "tileset");
		
		while (parser.next() != XmlPullParser.END_TAG)
		{
			if (parser.getEventType() != XmlPullParser.START_TAG)
				continue;
			
			String name = parser.getName();
			
			if (name.equals("tileset"))
				processTileSetTag(parser);
			
			if (name.equals("tile"))
				processTileTag(parser);
		}
	}
	
	public void processTileSetTag(XmlPullParser parser) throws XmlPullParserException, IOException
	{
		name = parser.getAttributeValue(ns, "name");
		texFileName = parser.getAttributeValue(ns, "map");
	}
	
	public void processTileTag(XmlPullParser parser) throws XmlPullParserException, IOException
	{
		name = parser.getAttributeValue(ns, "name");
		texFileName = parser.getAttributeValue(ns, "map");
	}
}
